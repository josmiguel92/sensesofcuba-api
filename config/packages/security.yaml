# see https://github.com/symfony/recipes/blob/master/symfony/security-bundle/3.3/config/packages/security.yaml
security:
    encoders:
        MsgPhp\User\Infrastructure\Security\UserIdentity: auto
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        msgphp_user: { id: MsgPhp\User\Infrastructure\Security\UserIdentityProvider }
        msgphp_user_jwt: { id: MsgPhp\User\Infrastructure\Security\Jwt\UserIdentityProvider }

    role_hierarchy:
        ROLE_USER:      ROLE_CLIENT
        ROLE_EDITOR:    ROLE_USER
        ROLE_ADMIN:     [ROLE_EDITOR, ROLE_USER]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api_login:
            pattern: ^/api/login
            anonymous: true
            stateless: true
            provider: msgphp_user_jwt
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api_register:
            pattern: ^/api/register
            anonymous: true
            stateless: true
            provider: msgphp_user_jwt

        api_reset_password:
            pattern: ^/api/reset-password
            anonymous: true
            stateless: true
            provider: msgphp_user_jwt

        api:
            pattern: ^/api
            anonymous: true
            stateless: true
            provider: msgphp_user_jwt
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator


        main_admin:
            pattern: ^/admin
            anonymous: true
            provider: msgphp_user_jwt
            form_login:
                login_path: /
                check_path: login
                default_target_path: home
                username_parameter: email
                password_parameter: password
            logout:
                path: app_logout
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        html_proxy:
            pattern: ^/
            security: false

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/reset-password, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_EDITOR }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        #- { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
